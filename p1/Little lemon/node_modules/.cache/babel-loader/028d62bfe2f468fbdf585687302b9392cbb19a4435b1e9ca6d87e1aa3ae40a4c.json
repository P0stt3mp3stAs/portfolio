{"ast":null,"code":"var _jsxFileName = \"/Users/lucy/Desktop/Capstone/Little lemon/src/components/Heading/Heading.jsx\";\nimport './Heading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ELEMENTS = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\nconst SIZE_OPTIONS = ['xs', 'sm', 'standard', 'base', 'm', 'lg', 'xl', '2xl'];\nexport const Heading = _ref => {\n  let {\n    tag = 'h2',\n    size,\n    align = 'left',\n    children\n  } = _ref;\n  let computedSize = 'text-';\n  const computedAlign = ['left', 'right', 'center'].includes(align) ? align : 'left';\n  const Element = ELEMENTS.includes(tag) ? tag : 'h2';\n  if (size && SIZE_OPTIONS.includes(size)) computedSize += size;else {\n    switch (Element) {\n      case 'h1':\n        computedSize += 'xl';\n        break;\n      case 'h2':\n        computedSize += 'lg';\n        break;\n      case 'h3':\n        computedSize += 'm';\n        break;\n      case 'h4':\n        computedSize += 'base';\n        break;\n      case 'h5':\n        computedSize += 'standard';\n        break;\n      case 'h6':\n        computedSize += 'sm';\n        break;\n      default:\n        break;\n    }\n  }\n  const classList = `${computedSize} ${computedAlign}`;\n  return /*#__PURE__*/_jsxDEV(Element, {\n    className: classList,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_c = Heading;\nvar _c;\n$RefreshReg$(_c, \"Heading\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","ELEMENTS","SIZE_OPTIONS","Heading","_ref","tag","size","align","children","computedSize","computedAlign","includes","Element","classList","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lucy/Desktop/Capstone/Little lemon/src/components/Heading/Heading.jsx"],"sourcesContent":["import './Heading.css';\n\nconst ELEMENTS = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\nconst SIZE_OPTIONS = ['xs', 'sm', 'standard', 'base', 'm', 'lg', 'xl', '2xl'];\n\nexport const Heading = ({ tag = 'h2', size, align = 'left', children }) => {\n  let computedSize = 'text-';\n  const computedAlign = ['left', 'right', 'center'].includes(align)\n    ? align\n    : 'left';\n  const Element = ELEMENTS.includes(tag) ? tag : 'h2';\n\n  if (size && SIZE_OPTIONS.includes(size)) computedSize += size;\n  else {\n    switch (Element) {\n      case 'h1':\n        computedSize += 'xl';\n        break;\n      case 'h2':\n        computedSize += 'lg';\n        break;\n      case 'h3':\n        computedSize += 'm';\n        break;\n      case 'h4':\n        computedSize += 'base';\n        break;\n      case 'h5':\n        computedSize += 'standard';\n        break;\n      case 'h6':\n        computedSize += 'sm';\n        break;\n      default:\n        break;\n    }\n  }\n\n  const classList = `${computedSize} ${computedAlign}`;\n\n  return <Element className={classList}>{children}</Element>;\n};\n"],"mappings":";AAAA,OAAO,eAAe;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AACrD,MAAMC,YAAY,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AAE7E,OAAO,MAAMC,OAAO,GAAGC,IAAA,IAAoD;EAAA,IAAnD;IAAEC,GAAG,GAAG,IAAI;IAAEC,IAAI;IAAEC,KAAK,GAAG,MAAM;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACpE,IAAIK,YAAY,GAAG,OAAO;EAC1B,MAAMC,aAAa,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACJ,KAAK,CAAC,GAC7DA,KAAK,GACL,MAAM;EACV,MAAMK,OAAO,GAAGX,QAAQ,CAACU,QAAQ,CAACN,GAAG,CAAC,GAAGA,GAAG,GAAG,IAAI;EAEnD,IAAIC,IAAI,IAAIJ,YAAY,CAACS,QAAQ,CAACL,IAAI,CAAC,EAAEG,YAAY,IAAIH,IAAI,CAAC,KACzD;IACH,QAAQM,OAAO;MACb,KAAK,IAAI;QACPH,YAAY,IAAI,IAAI;QACpB;MACF,KAAK,IAAI;QACPA,YAAY,IAAI,IAAI;QACpB;MACF,KAAK,IAAI;QACPA,YAAY,IAAI,GAAG;QACnB;MACF,KAAK,IAAI;QACPA,YAAY,IAAI,MAAM;QACtB;MACF,KAAK,IAAI;QACPA,YAAY,IAAI,UAAU;QAC1B;MACF,KAAK,IAAI;QACPA,YAAY,IAAI,IAAI;QACpB;MACF;QACE;IACJ;EACF;EAEA,MAAMI,SAAS,GAAI,GAAEJ,YAAa,IAAGC,aAAc,EAAC;EAEpD,oBAAOV,OAAA,CAACY,OAAO;IAACE,SAAS,EAAED,SAAU;IAAAL,QAAA,EAAEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAC5D,CAAC;AAACC,EAAA,GApCWhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}